Lecture 8 Notes:

What is a Process?
	- The operating system determines when different programs will run
	- Besides running the program, the Java interpreter process must do other tasks
		- Memory management like garbage collection
	- How does the interpreter perform multiple tasks within a single process?
		- Threads. That's how.

What is a Thread?
	- A thread is a flow of execution
	- Java has built-in multithreading

	- When a program executes, the JVM starts a thread to run main()
		- This is the main thread of execution
	- Each thread is an instance of a class that
		- either extends the Thread class
		- or implements Runnable

Why to one or the other?
	- Want to implement Runnable if you are already extending something else

Thread Methods
	- yield() method
		- Releases the CPU so another thread can continue
		- Scheduler can choose to ignore this request
	- sleep() method
		- Pauses thread execution for a specified number of milliseconds
	- join() method
		- Makes one thread wait for another thread to finish

Coordinating Thread Execution
	- synchronized keyword indicates that only one thread can be active in any method at one time
		- This "locks" the object instance
	- Critical Region
		- To avoid race conditions, we use synchronize to lock the object before a thread begins working
	- A synchronized block can lock inside a portion of a method
		- Smaller critical region => better performance
	- Thread Cooperation
		- Object.wait()
			- Blocks a thread
		- Object.notify()
			- Wakes up a thread waiting on some condition
		- Object.notifyAll()
			- Wakes up all threads waiting on some condition
			- Scheduling decides which gets notified first
		- These methods must be called inside a synchronized method or block that has locked the object instance

Java's Monitor: A thread cooperation construct
	- Two kinds of synchronization
		- Mutual Exclusion
			- Uses synchronized to keep threads from interfering with one another when sharing data
		- Cooperation
			- Uses wait and notify to allow threads to coordinate and share data
	- A monitor controls access to data and coordinates threads
		
