package main;

import static java.awt.event.InputEvent.CTRL_DOWN_MASK;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JTabbedPane;
import javax.swing.KeyStroke;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileNameExtensionFilter;

import Tab.TabContent;
import Tab.TabPanel;

@SuppressWarnings("serial")
public class Display extends JFrame{
	
	public static Display display = null;
 
	TabPanel tabs;
	JFileChooser chooser;
	
	protected Display(){}
	
	public static Display getDisplay(){
		if(display == null){
			display = new Display();
			display.init();
		}
		return display;
	}
	
	public void init(){
	    setTitle("HTML Editor");
        setSize(750, 750);
        chooser = new JFileChooser();
		createMenuBar();
		tabs = new TabPanel();
		this.add( tabs );
	}
	
	public TabPanel getTabPanel(){
        return this.tabs;
    }

	//basic menu bar
	private void createMenuBar(){
		JMenuBar menu = new JMenuBar();
		JMenu file = new JMenu("File");
		JMenu insert = new JMenu("Insert");
		JMenuItem open = new JMenuItem("Open");
		JMenuItem save = new JMenuItem("Save");
		JMenuItem exit = new JMenuItem("Exit");
		
		//short-cut exit key
		exit.setAccelerator(KeyStroke.getKeyStroke('E', CTRL_DOWN_MASK));
		open.setAccelerator(KeyStroke.getKeyStroke('O', CTRL_DOWN_MASK));
		save.setAccelerator(KeyStroke.getKeyStroke('S', CTRL_DOWN_MASK));
		
		
		
		open.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event){
				FileNameExtensionFilter filter = new FileNameExtensionFilter("HTML Files", "html");
				chooser.setFileFilter(filter);
				
				int returnVal = chooser.showOpenDialog(tabs);
				if(returnVal == JFileChooser.APPROVE_OPTION){
					File file = chooser.getSelectedFile();
					String inputFile = file.getPath();
					FileReader filereader;
					BufferedReader br = null;
					
					try{
						filereader = new FileReader(inputFile);
						br = new BufferedReader(filereader);
					} catch (FileNotFoundException e){
						e.printStackTrace();
					}
					
					try{
						String line;
						while(((line = br.readLine()) != null)){
							Line curr = new Line(line);
							//stores data in current buffer's data structure
							((TabContent) tabs.getComponentAt(0)).getBuffer().add(curr);
						}
						((TabContent) tabs.getComponentAt(0)).getBuffer().updateTextArea();
					} catch (IOException e){
						e.printStackTrace();
					}
					
				} else {
					System.out.println("Open terminated");
				}
			}
		});
		
		save.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event){
	                JFileChooser saveFile = new JFileChooser();
	                saveFile.showSaveDialog(null);
	            }
		});
		
		exit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event){
				System.exit(0); //exit editor
			}
		});
		
		file.add(open);
		file.add(save);
		file.add(exit);
		menu.add(file);
		menu.add(insert);
		setJMenuBar(menu);
	}

}