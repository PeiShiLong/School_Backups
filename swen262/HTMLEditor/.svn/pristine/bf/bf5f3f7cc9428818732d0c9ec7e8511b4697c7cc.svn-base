package main;

import static java.awt.event.InputEvent.CTRL_DOWN_MASK;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JTabbedPane;
import javax.swing.KeyStroke;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JFileChooser;

@SuppressWarnings("serial")
public class Display extends JFrame{
 
	CommandCenter command;
	JTabbedPane tabs;
	JFileChooser chooser;
	int tab_index;
	
	public Display(){
		setTitle("HTML Editor");
		setSize(750, 750);
		chooser = new JFileChooser();
		command = new CommandCenter();
		init();
		tab_index = 0;
	}
	
	public void init(){
		createMenuBar();
		createTabbedPanes();
	}
	
	private void createTabbedPanes() {
		tabs = new JTabbedPane();
		tabs.addTab(null, new TabContent() );
		tabs.setTabComponentAt( tab_index , new TabHeader() );
		
		((TabHeader) tabs.getTabComponentAt(tab_index)).getButton().addActionListener( new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				tabs.remove(tab_index);
			}
		});
		
		tabs.addTab("+",null);
		tabs.setSelectedIndex( 0 );
		tabs.addChangeListener( new ChangeListener(){
            @Override
            public void stateChanged(ChangeEvent arg0) {
            	tab_index = Display.this.tabs.getSelectedIndex();
            	System.out.println(Display.this.tab_index);
                int tabCount = Display.this.tabs.getTabCount();
                if(Display.this.tab_index == tabCount - 1){
                    Display.this.tabs.setSelectedIndex(0);
                    Display.this.tabs.insertTab(null, null, new TabContent(), null, tabCount - 1);
                    Display.this.tabs.setTabComponentAt(tabCount - 1, new TabHeader());
                    
                    ((TabHeader) tabs.getTabComponentAt(tabCount-1)).getButton().addActionListener( new ActionListener(){
            			@Override
            			public void actionPerformed(ActionEvent e) {
            				tabs.remove(tab_index);
            			}
            		});
                    
                    Display.this.tabs.setSelectedIndex( tabCount - 1 );
                   
                    
                }
            }
        } );
		this.add(tabs);
	}

	//basic menu bar
	private void createMenuBar(){
		JMenuBar menu = new JMenuBar();
		JMenu file = new JMenu("File");
		JMenu insert = new JMenu("Insert");
		JMenuItem open = new JMenuItem("Open");
		JMenuItem save = new JMenuItem("Save");
		JMenuItem exit = new JMenuItem("Exit");
		
		//short-cut exit key
		exit.setAccelerator(KeyStroke.getKeyStroke('E', CTRL_DOWN_MASK));
		open.setAccelerator(KeyStroke.getKeyStroke('O', CTRL_DOWN_MASK));
		save.setAccelerator(KeyStroke.getKeyStroke('S', CTRL_DOWN_MASK));
		
		
		
		open.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event){
				FileNameExtensionFilter filter = new FileNameExtensionFilter("HTML Files", "html");
				chooser.setFileFilter(filter);
				
				int returnVal = chooser.showOpenDialog(tabs);
				if(returnVal == JFileChooser.APPROVE_OPTION){
					File file = chooser.getSelectedFile();
					String inputFile = file.getPath();
					FileReader filereader;
					BufferedReader br = null;
					
					try{
						filereader = new FileReader(inputFile);
						br = new BufferedReader(filereader);
					} catch (FileNotFoundException e){
						e.printStackTrace();
					}
					
					try{
						String line;
						while(((line = br.readLine()) != null)){
							Line curr = new Line(line);
							//stores data in current buffer's data structure
							((TabContent) tabs.getComponentAt(tab_index)).getBuffer().add(curr);
						}
						((TabContent) tabs.getComponentAt(tab_index)).getBuffer().updateTextArea();
					} catch (IOException e){
						e.printStackTrace();
					}
					
				} else {
					System.out.println("Open terminated");
				}
			}
		});
		
		save.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event){
	                JFileChooser saveFile = new JFileChooser();
	                saveFile.showSaveDialog(null);
	            }
		});
		
		exit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event){
				System.exit(0); //exit editor
			}
		});
		
		file.add(open);
		file.add(save);
		file.add(exit);
		menu.add(file);
		menu.add(insert);
		setJMenuBar(menu);
	}
}